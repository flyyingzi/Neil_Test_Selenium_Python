#!/usr/bin/env python
#coding: utf-8

"""
@Author: Well
@Date: 2014 - 07 - 05
"""

# 引自：http://www.w3cschool.cc/python/python-operators.html

# 3.1 什么是运算符
"""
算术运算符
比较（关系）运算符
赋值运算符
逻辑运算符
位运算符
成员运算符
身份运算符
运算符优先级
"""

# 3.2 算术运算符
"""
+	加 - 两个对象相加
-	减 - 得到负数或是一个数减去另一个数
*	乘 - 两个数相乘或是返回一个被重复若干次的字符串
/	除 - x除以y
%	取模 - 返回除法的余数
** 幂 - 返回x的y次幂
// 取整除 - 返回商的整数部分
"""

print "-------3.2 算术运算符-start-------"
a, b = 5, 2
print a + b
print a - b
print a * b
print a / b
print a % b
print a ** b
print a // b  # 取整除

print -5.1 % 2  # 负数取余
print -5.0 // 2  # 负数取整除
print "-------3.2 算术运算符-end-------"

# 3.3 比较运算符
"""
==	等于 - 比较对象是否相等
!=	不等于 - 比较两个对象是否不相等
<>	不等于 - 比较两个对象是否不相等, 一般用 !=替换掉
>	大于 - 返回x是否大于y
<	小于 - 返回x是否小于y。所有比较运算符返回1表示真，返回0表示假。这分别与特殊的变量True和False等价。
注意，这些变量名的大写。
>=　大于等于 - 返回x是否大于等于y。
<=　小于等于 - 返回x是否小于等于y。
"""
a = 21
b = 10
print "-------3.3 比较运算符-start-------"
print a == b
print a != b
print a > b
print a < b
print a >= b
print a <= b
print "-------3.3 比较运算符-end-------"

# 3.4 赋值运算符
"""
=	简单的赋值运算符	c = a + b 将 a + b 的运算结果赋值为 c
+=	加法赋值运算符	c += a 等效于 c = c + a
-=	减法赋值运算符	c -= a 等效于 c = c - a
*=	乘法赋值运算符	c *= a 等效于 c = c * a
/=	除法赋值运算符	c /= a 等效于 c = c / a
%=	取模赋值运算符	c %= a 等效于 c = c % a
**=	幂赋值运算符	c **= a 等效于 c = c ** a
//=	取整除赋值运算符	c //= a 等效于 c = c // a
"""

# 3.5 位运算符
"""
a = 60  # 60 = 0011 1100
b = 13  # 13 = 0000 1101

&	按位与运算符	(a & b) 输出结果 12 ，二进制解释： 0000 1100
|	按位或运算符	(a | b) 输出结果 61 ，二进制解释： 0011 1101
^	按位异或运算符 	(a ^ b) 输出结果 49 ，二进制解释： 0011 0001
~	按位取反运算符 	(~a ) 输出结果 -61 ，二进制解释： 1100 0011， 在一个有符号二进制数的补码形式。
<<	左移动运算符 	a << 2 输出结果 240 ，二进制解释： 1111 0000
>>	右移动运算符	a >> 2 输出结果 15 ，二进制解释： 0000 1111
"""
print "-------3.5 位运算符-start-------"
a = 60  # 60 = 0011 1100
b = 13  # 13 = 0000 1101
print a & b  # 12 = 0000 1100
print a | b  # 61 = 0011 1101
print a ^ b  # 49 = 0011 0001
print ~a  # -61 = 1100 0011
print a << 2  # 240 = 1111 0000
print a >> 2  # 15 = 0000 1111
print "-------3.5 位运算符-end-------"

# 3.6 逻辑运算符
"""
and	布尔"与" - 如果x为False，x and y返回False，否则它返回y的计算值。
or	布尔"或" - 如果x是True，它返回True，否则它返回y的计算值。
not	布尔"非" - 如果x为True，返回False。如果x为False，它返回True。
"""

# 3.7 成员运算符
"""
实例中包含了一系列的成员，包括字符串，列表或元组。
in	如果在指定的序列中找到值返回True，否则返回False。
not in	如果在指定的序列中没有找到值返回True，否则返回False。
"""

# 3.8 身份运算符
"""
身份运算符用于比较两个对象的存储单元。
is	is是判断两个标识符是不是引用自一个对象。
is not	is not是判断两个标识符是不是引用自不同对象。
"""
a, b = 20, 20
print a is b
print isinstance(a, type(b))

# 3.9 运算符优先级
"""
列出了从最高到最低优先级的所有运算符：
** 	指数 (最高优先级)
~ + - 	按位翻转, 一元加号和减号 (最后两个的方法名为 +@ 和 -@)
* / % // 	乘，除，取模和取整除
+ - 	加法减法
>> << 	右移，左移运算符
& 	位 'AND'
^ | 	位运算符
<= < > >= 	比较运算符
<> == != 	等于运算符
= %= /= //= -= += *= **= 	赋值运算符
is is not 	身份运算符
in not in 	成员运算符
not or and 	逻辑运算符
"""